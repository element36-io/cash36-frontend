image: alpine:latest

variables:
  DOCKER_DRIVER: overlay

services:
  - docker:dind

stages:
  - build
  - test
  - package
  - deploy

build:
  stage: build
  tags:
    - dokcer
  script:
    - apk add --no-cache nodejs nodejs-npm git python g++ make
    - npm install -g yarn
    - yarn --registry http://167.99.243.81:4873/
    - CI=false yarn build
  except:
    - master

test:
  stage: test
  tags:
    - dokcer
  script:
    - apk add --no-cache nodejs nodejs-npm git python g++ make
    - npm install -g yarn
    - yarn --registry http://167.99.243.81:4873/
    - yarn test
  except:
    - master

docker-debug-build:
  stage: package
  environment: test
  image: docker:dind
  tags:
    - dokcer
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:dev-latest -f ./docker/debug/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE:dev-latest
  only:
    - master

deploy-test:
  image: docker:latest
  stage: deploy
  environment: test
  tags:
    - dokcer
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker stop $CI_PROJECT_NAME || true
    - docker rm $CI_PROJECT_NAME || true
    - docker pull $CI_REGISTRY_IMAGE:dev-latest
    - docker run --name $CI_PROJECT_NAME -p 3000:3000 -d $CI_REGISTRY_IMAGE:dev-latest
  only:
    - master

docker-release-build:
  stage: package
  environment: production
  image: docker:dind
  only:
    - tags
  tags:
    - dokcer
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME -f ./docker/release/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest

deploy-prod:
  stage: deploy
  environment: production
  image: google/cloud-sdk
  tags:
    - kubernetes
  script:
    - kubectl config set-cluster $K8S_NAME --server="$K8S_API_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials $K8S_USER --token=$K8S_TOKEN
    - kubectl config set-context default --cluster=$K8S_NAME --user=$K8S_USER --namespace=element36-io
    - kubectl config use-context default
    - kubectl set image deployment/$CI_PROJECT_NAME $CI_PROJECT_NAME=$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - kubectl rollout status deployment/$CI_PROJECT_NAME
  only:
    - tags
  when: manual
