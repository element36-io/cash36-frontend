image: alpine:3.10

variables:
  DOCKER_DRIVER: overlay

services:
  - docker:dind

stages:
  - test
  - package

test:
  stage: test
  tags:
    - dokcer
  script:
    - apk add --no-cache nodejs nodejs-npm git python g++ make
    - echo "//npm.pkg.github.com/:_authToken='$GPR_READ_TOKEN'" >> .npmrc
    - npm install -g yarn
    - yarn version
    - yarn --registry https://registry.yarnpkg.com --network-timeout 200000
    - yarn test
  except:
    - prod

docker-dev-build:
  stage: package
  #  environment: test
  image: docker:dind
  tags:
    - dokcer
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build --build-arg nodeenv=development --build-arg gprtoken=$GPR_READ_TOKEN -t $CI_REGISTRY_IMAGE:dev-latest -f ./docker/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE:dev-latest
  only:
    - develop
    - master

build-prod:
  image: google/cloud-sdk
  stage: package
  tags:
    - dokcer
  environment:
    name: prod
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build --build-arg nodeenv=prod --build-arg gprtoken=$GPR_READ_TOKEN -t $CI_REGISTRY_IMAGE:prod-latest -f ./docker/release/Dockerfile .
    - docker tag  $CI_REGISTRY_IMAGE:prod-latest $CI_REGISTRY_IMAGE:prod-latest
    - docker tag  $CI_REGISTRY_IMAGE:prod-latest $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID 
    - docker tag  $CI_REGISTRY_IMAGE:prod-latest $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:prod-latest  
    - docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID  
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  only:
    - prod
